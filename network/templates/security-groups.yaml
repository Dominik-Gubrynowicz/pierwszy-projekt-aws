AWSTemplateFormatVersion: 2010-09-09
Description: Network template for security groups

Parameters:
  #Project params
  Project:
    Description: Name of the project
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Component:
    Description: Name of the component
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,15}$
  Stage:
    Description: Stage Name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  
  #Port config
  ApplicationPort:
    Description: Port for API of the app
    Type: String
    AllowedPattern: ^(\d){1,6}$
    ConstraintDescription: Parameter must be a number
  DatabasePort:
    Description: Database communication port
    Type: String
    AllowedPattern: ^(\d){1,6}$
    ConstraintDescription: Parameter must be a number

  #Other config
  JumpHostAllowedCidrBlock:
    Description: CIDR Ip block which will have access to the JumpHost
    Type: String
    AllowedPattern: ^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\/(\d{1,2})$
    ConstraintDescription: Must be a valid CIDR block
  VpcId:
    Description: Reference of the VpcId from the SSM parameter store
    Type: AWS::SSM::Parameter::Value<String>

Resources:

  #JumpHost Security Group
  JumpHostSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Project}-${Stage}-${Component}-jumphost-sg
      GroupDescription: SG for jumphost
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref JumpHostAllowedCidrBlock
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-jumphost-sg

  JumpHostSGIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub Stores ${Project}-${Stage}-${Component} Jumphost SG id
      Name: !Sub /${Project}/${Stage}/${Component}/jumphost-sg/id
      Tier: Standard
      Type: String
      Value: !Ref JumpHostSG
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-jumphost-sg-id

  #LoadBalancer Security Group
  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Project}-${Stage}-${Component}-load-balancer-sg
      GroupDescription: SG for load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-load-balancer-sg
  
  LoadBalancerSGIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub Stores ${Project}-${Stage}-${Component} load balancer SG ID
      Name: !Sub /${Project}/${Stage}/${Component}/loadbalancer-sg/id
      Tier: Standard
      Type: String
      Value: !Ref LoadBalancerSG
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-load-balancer-sg-id

  #Application EC2 SG
  ApplicationSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Project}-${Stage}-${Component}-application-sg
      GroupDescription: SG for Application
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ApplicationPort
          ToPort: !Ref ApplicationPort
          SourceSecurityGroupId: !Ref LoadBalancerSG
        - IpProtocol: tcp
          FromPort: !Ref ApplicationPort
          ToPort: !Ref ApplicationPort
          SourceSecurityGroupId: !Ref JumpHostSG
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-application-sg

  ApplicationSGIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub Stores ${Project}-${Stage}-${Component} application SG ID
      Name: !Sub /${Project}/${Stage}/${Component}/application-sg/id
      Tier: Standard
      Type: String
      Value: !Ref ApplicationSG
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-application-sg-id 

  #Database SG
  DatabaseSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Project}-${Stage}-${Component}-database-sg
      GroupDescription: SG for Database
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DatabasePort
          ToPort: !Ref DatabasePort
          SourceSecurityGroupId: !Ref ApplicationSG
        - IpProtocol: tcp
          FromPort: !Ref DatabasePort
          ToPort: !Ref DatabasePort
          SourceSecurityGroupId: !Ref JumpHostSG
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-database-sg

  DatabaseSGIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub Stores ${Project}-${Stage}-${Component} database SG ID
      Name: !Sub /${Project}/${Stage}/${Component}/database-sg/id
      Tier: Standard
      Type: String
      Value: !Ref DatabaseSG
      Tags:
        Name: !Sub ${Project}-${Stage}-${Component}-database-sg-id 


Outputs:
  #Jump Host SG info
  JumpHostSGId:
    Description: The ID of JumpHost SG
    Value: !Ref JumpHostSG
  JumpHostSGIdParamName:
    Description: The name of SSM parameter where the ID of JumpHost SG is stored
    Value: !Ref JumpHostSGIdParam
  #Load Balancer SG info
  LoadBalancerSGId:
    Description: The ID of Load Balancer SG
    Value: !Ref LoadBalancerSG
  LoadBalancerSGIdParamName:
    Description: The name of SSM parameter where the ID of Load Balancer SG is stored
    Value: !Ref LoadBalancerSGIdParam
  #Application SG info
  ApplicationSGId:
    Description: The ID of Application SG
    Value: !Ref ApplicationSG
  ApplicationSGIdParamName:
    Description: The name of SSM parameter where the ID of Application SG is stored
    Value: !Ref ApplicationSGIdParam  
  #Database SG info
  DatabaseSGId:
    Description: The ID of Database SG
    Value: !Ref DatabaseSG
  DatabaseSGIdParamName:
    Description: The name of SSM parameter where the ID of Database SG is stored
    Value: !Ref DatabaseSGIdParam  