AWSTemplateFormatVersion: 2010-09-09
Description: Template for AWS Cloudfront CDN

Parameters:
  #Project settings
  Project:
    Description: Project name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{3,20}$
  Stage:
    Description: Stage name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  Component:
    Description: Component name
    Type: String
    AllowedPattern: ^[a-z][a-zA-Z0-9-]{2,15}$
  #CDN Sources
  AlbUrl: 
    Description: Url of LoadBalancer which serves backend of the application
    Type: AWS::SSM::Parameter::Value<String>
  S3WebsiteBucketName:
    Description: Name of the bucket which stores static frontend website
    Type: AWS::SSM::Parameter::Value<String>

Resources:
  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 400
          - ErrorCachingMinTTL: 1
            ErrorCode: 403
          - ErrorCachingMinTTL: 5
            ErrorCode: 500
        DefaultCacheBehavior:
          TargetOriginId: S3Orgin
          ViewerProtocolPolicy: redirect-to-https
          DefaultTTL: 86400
          MaxTTL: 31536000
          MinTTL: 86400
          AllowedMethods:
            - DELETE
            - GET
            - HEAD 
            - OPTIONS 
            - PATCH 
            - POST
            - PUT
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: true
            QueryStringCacheKeys:
              - _cftp
            Headers:
              - Access-Control-Request-Headers
              - Access-Control-Request-Method
              - Origin
              - Authorization
              - X-AUTH-TOKEN
              - Vary
            Cookies:
              Forward: all
          Compress: true
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !Ref AlbUrl
            Id: AlbOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
              HTTPPort: 80
            OriginPath: ''
          - DomainName: !Sub '${S3WebsiteBucketName}.s3.amazonaws.com'
            Id: S3Origin
            OriginPath: ''
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${OriginAccessIdentity}'
        CacheBehaviors:
          - PathPattern: '/memes*'
            TargetOriginId: AlbOrigin
            ViewerProtocolPolicy: redirect-to-https
            MinTTL: 0
            MaxTTL: 0
            DefaultTTL: 0
            ForwardedValues:
              QueryString: true
            AllowedMethods:
              - DELETE
              - GET
              - HEAD 
              - OPTIONS 
              - PATCH 
              - POST
              - PUT
          - PathPattern: '/download/*'
            TargetOriginId: AlbOrigin
            MinTTL: 500
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: true
      Tags:
        - Key: Name
          Value: !Sub ${Project}-${Stage}-${Component}-cdn
    
  S3BucketPolicyWithAOI:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3WebsiteBucketName
      PolicyDocument:
        Statement:
          - Action:
            - s3:GetObject
            Effect: 'Allow'
            Principal:
              CanonicalUser: !GetAtt OriginAccessIdentity.S3CanonicalUserId
            Resource:
              - !Sub arn:aws:s3:::${S3WebsiteBucketName}/*

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Access S3 bucket content only through CloudFront

Outputs:
  DistributionId:
    Description: CloudFront Distribution ID
    Value: !Ref Distribution